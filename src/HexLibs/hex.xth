.include hex-spells.xth

// ================ Escaping Patterns ================ \\


: \ //( - any)
	.pattern west qqqaw //Consideration
;

: ( //( - )
	.pattern west qqq //Introspection
;

: ) //( - list)
	.pattern east eee //Retrospection
;


// ================ Basic Patterns ================ \\


: get-caster //( - entity)
	.pattern north_east qaq //Mind's Reflection
; 

: entity-position //(entity - vector)
	.pattern east aa //Compass' Purification
;

: entity-position-feet //(entity - vector)
	.pattern north_east aa //Compass' Purification 2
;

: entity-lookvector //(entity - vector)
	.pattern east wa //Alidade's Purification
;

: raycast-block //(vector vector - vector)
	.pattern east wqaawdd //Archer's Distillation
;

: raycast-block-face //(vector vector - vector)
	.pattern east weddwaa //Architect's Distillation
;

: raycast-entity //(vector vector - entity)
	.pattern east weaqa //Scout's Distillation
;

: reveal //(any - any)
	.pattern north_east de //Reveal
;

: entity-height //(entity - number)
	.pattern north_east awq //Stadiometer's Purification
;

: entity-velocity //(entity - vector)
	.pattern east wq //Pace Purification
;

// ================ Mathematics ================ \\


: add //(number|vector number|vector - number|vector)
	.pattern north_east waaw //Additive Distillation
;

: sub //(number|vector number|vector - number|vector)
	.pattern north_west wddw //Subtractive Distillation
;

: mul //(number|vector number|vector - number|vector)
	.pattern south_east waqaw //Multiplicative Distillation
;

: div //(number|vector number|vector - number|vector)
	.pattern north_east wdedw //Division Distillation
;

: abs //(number - number)
	.pattern north_east wqaqw //Length Purification
;

: length //(vector - number)
	.pattern north_east wqaqw //Length Purification
;

: pow //(number|vector number|vector - number|vector)
	.pattern north_west wedew //Power Distillation
;

: floor //(number - number)
	.pattern east ewq //Floor Purification
;

: ceil //(number - number)
	.pattern east qwe //Floor Purification
;

: vector-wrap //(number number number - vector)
	.pattern east eqqqqq //Vector Exaltation
;

: vector-unwrap //(vector - number number number)
	.pattern east qeeeee //Vector Disintegration
;

: mod //(number number - number)
	.pattern north_east addwaad //Modulus Distillation
;

: vector-axis //(vector - vector)
	.pattern north_west qqqqqaww //Axial Purification
;

: random //( - number)
	.pattern north_west eqqq //Entropy Reflection
;


// ================ Constants ================ \\


: true //( - bool)
	.pattern south_east aqae //True Reflection
;

: false //( - bool)
	.pattern north_east dedq //False Reflection
;

: null //( - null)
	.pattern east d //Nullary Reflection
;

: create-vector-zero //( - vector)
	.pattern north_west qqqqq //Vector Reflection Zero
;

: create-vector-pos-x //( - vector)
	.pattern north_west qqqqqea //Vector Reflection +X
;

: create-vector-neg-x //( - vector)
	.pattern north_east eeeeeqa //Vector Reflection -X
;

: create-vector-pos-y //( - vector)
	.pattern north_west qqqqqew //Vector Reflection +Y
;

: create-vector-neg-y //( - vector)
	.pattern north_east eeeeeqw //Vector Reflection -Y
;

: create-vector-pos-z //( - vector)
	.pattern north_west qqqqqed //Vector Reflection +Z
;

: create-vector-neg-z //( - vector)
	.pattern north_east eeeeeqd //Vector Reflection -Z
;

: const-tau //( - number)
	.pattern north_west eawae //Circle's Reflection
;

: const-pi //( - number)
	.pattern north_east qdwdq //Arc's Reflection
;

: const-e //( - number)
	.pattern east aaq //Euler's Reflection
;


// ================ Stack Manipulation ================ \\


: drop //(any - )
	.pattern east a //Novice's Gambit
;

: swap //(a b - b a)
	.pattern east aawdd //Jester's Gambit
;

: rot //(a b c - b c a)
	.pattern east aaeaa //Rotation Gambit
;

: rrot //(a b c - c a b)
	.pattern north_east ddqdd //Rotation Gambit 2
;

: dup //(a - a a)
	.pattern east aadaa //Gemini Decomposition
;

: over //(a b - a b a)
	.pattern east aaedd //Prospector's Gambit
;

: tuck //(a b - b a b)
	.pattern east ddqaa //Undertaker's Gambit
;

: rep //(any number - many)
	.pattern east aadaadaa //Gemini Gambit
;

: 2dup //(a b - a b a b)
	.pattern east aadadaaw //Dioscuri Gambit
;

: get-stack-size //( - number)
	.pattern north_west qwaeawqaeaqa //Flock's Reflection
;

: cut-iota //(number - any)
	.pattern west ddad //Fisherman's Gambit
;

: copy-iota //(number - any)
	.pattern east aada //Fisherman's Gambit 2
;

: stack-permute //(many - many)
	.pattern south_east qaawdde //Swindler's Gambit
;

: 2swap //(a b c d - c d a b)
	.pattern south_east aqaaqawq //Numeric Reflection: 16
	stack-permute
;


// ================ Logical Operators ================ \\


: any-to-bool //(any - bool)
	.pattern north_east aw //Augur's Purification
;

: bool-to-number //(bool - number)
	.pattern north_east wqaqw //Length Purification
;

: not //(bool - bool)
	.pattern north_west dw //Negation Purification
;

: or //(bool bool - bool)
	.pattern south_east waw //Disjunction Distillation
;

: and //(bool bool - bool)
	.pattern north_east wdw //Conjunction Distillation
;

: xor //(bool bool - bool)
	.pattern north_west dwa //Exclusion Distillation
;

: ? //(bool any(true) any(false) - any)
	.pattern south_east awdd //Augur's Exaltation
;

: ?eq //(any any - bool)
	.pattern east ad //Equality Distillation
;

: ?neq //(any any - bool)
	.pattern east da //Inequality Distillation
;

: ?gt //(number number - bool)
	.pattern south_east e //Maximus Distillation
;

: ?lt //(number number - bool)
	.pattern south_west q //Minimus Distillation
;

: ?geq //(number number - bool)
	.pattern south_east ee //Maximus Distillation II
;

: ?leq //(number number - bool)
	.pattern south_west qq //Minimus Distillation II
;


// ================ Entity Purification ================ \\


: position-entity //(vector - entity|null)
	.pattern south_east qqqqqdaqa //Entity Purification
;

: position-animal //(vector - entity|null)
	.pattern south_east qqqqqdaqaawa //Entity Purification Animal
;

: position-monster //(vector - entity|null)
	.pattern south_east qqqqqdaqaawq //Entity Purification Monster
;

: position-item //(vector - entity|null)
	.pattern south_east qqqqqdaqaaww //Entity Purification Item
;

: position-player //(vector - entity|null)
	.pattern south_east qqqqqdaqaawe //Entity Purification Player
;

: position-living //(vector - entity|null)
	.pattern south_east qqqqqdaqaawd //Entity Purification Living
;


// ================ Zone Distillation ================ \\


: zone-animals //(vector number - [entity])
	.pattern south_east qqqqqwdeddwa //Zone Distillation Animal
;

: zone-non-animals //(vector number - [entity])
	.pattern north_east eeeeewaqaawa //Zone Distillation Non-Animal
;

: zone-monsters //(vector number - [entity])
	.pattern south_east qqqqqwdeddwq //Zone Distillation Monster
;

: zone-non-monsters //(vector number - [entity])
	.pattern north_east eeeeewaqaawq //Zone Distillation Non-Monster
;

: zone-items //(vector number - [entity])
	.pattern south_east qqqqqwdeddww //Zone Distillation Item
;

: zone-non-items //(vector number - [entity])
	.pattern north_east eeeeewaqaaww //Zone Distillation Non-Item
;

: zone-players //(vector number - [entity])
	.pattern south_east qqqqqwdeddwe //Zone Distillation Player
;

: zone-non-players //(vector number - [entity])
	.pattern north_east eeeeewaqaawe //Zone Distillation Non-Player
;

: zone-living //(vector number - [entity])
	.pattern south_east qqqqqwdeddwd //Zone Distillation Living
;

: zone-non-living //(vector number - [entity])
	.pattern north_east eeeeewaqaawd //Zone Distillation Non-Living
;

: zone-entities //(vector number - [entity])
	.pattern south_east qqqqqwded //Zone Distillation Any
;


// ================ List Manipulation ================ \\


: read-list-item //(list number - any)
	.pattern north_west deeed //Selection Distillation
;

: list-slice //(list number number - list)
	.pattern north_west qaeaqwded //Selection Exaltation
;

: list-push //(list any - list)
	.pattern south_west edqde //Integration Distillation
;

: list-pop //(list - list any)
	.pattern north_west qaeaq //Derivation Distillation
;

: {} //( - list)
	.pattern north_east qqaeaae //Vacant Reflection
;

: () {} ;

: list-wrap //(any - list)
	.pattern east adeeed //Single's Purification
;

: list-reverse //(list - list)
	.pattern east qqqaede //Retrograde Purification
;

: list-indexof //(list any - number)
	.pattern east dedqde //Locator's Distillation
;

: list-remove-item //(list number - list)
	.pattern south_west edqdewaqa //Excisor's Distillation
;

: write-list-item //(list number any - list)
	.pattern north_west wqaeaqw //Surgeon's Exaltation
;

: list-wrap-many //(many number - list)
	.pattern south_west ewdqdwe //Flock's Gambit
;

: list-unwrap //(list - many)
	.pattern north_west qwaeawq //Flock's Disintegration
;

: list-push-left //(list any - list)
	.pattern south_east ddewedd //Speaker's Distillation
;

: list-pop-left //(list - list any)
	.pattern south_west aaqwqaa //Speaker's Decomposition
;


// ================ Reading and Writing ================ \\


: read-offhand //( - any)
	.pattern east aqqqqq //Scribe's Reflection
;

: write-offhand //( - any)
	.pattern east deeeee //Scribe's Gambit
;

: read-entity //(entity - any)
	.pattern east wawqwqwqwqwqw //Chronicler's Purification
;

: write-entity //(entity any - )
	.pattern east wdwewewewewew //Chronicler's Gambit
;

: ?read-offhand //( - bool)
	.pattern east aqqqqqe //Auditor's Reflection
;

: ?read-entity //(entity - bool)
	.pattern east wawqwqwqwqwqwew //Auditor's Purification
;

: ?write-offhand //( - bool)
	.pattern east deeeeeq //Assessor's Reflection
;

: ?write-entity //(entity - bool)
	.pattern east wdwewewewewewqw //Assessor's Purification
;

: write-ravenmind //(any - )
	.pattern north_west eqqwawqaaw //Huginn's Gambit
;

: read-ravenmind //( - any)
	.pattern north_east qeewdweddw //Muninn's Reflection
;


// ================ Advanced Mathematics ================ \\

: sin //(number - number)
	.pattern south_east qqqqqaa //Sine Purification
;

: cos //(number - number)
	.pattern south_east qqqqqad //Cosine Purification
;

: tan //(number - number)
	.pattern south_west wqqqqqadq //Tangent Purification
;

: asin //(number - number)
	.pattern south_east ddeeeee //Inverse Sine Purification
;

: acos //(number - number)
	.pattern north_east adeeeee //Inverse Cosine Purification
;

: atan //(number - number)
	.pattern north_east eadeeeeew //Inverse Tangent Purification
;

: atan2 //(number - number)
	.pattern west deadeeeeewd //Inverse Tangent Purification 2
;

: logbase //(number number - number)
	.pattern north_west eqaqe //Logarithmic Distillation
;


// ================ Meta-evaluation ================ \\


: eval //(pattern|[pattern] - many)
	.pattern south_east deaqq //Hermes' Gambit
;

: eval/cc //(pattern|[pattern] - many)
	.pattern north_west qwaqde //Iris' Gambit
;

: map //([pattern] list - list)
	.pattern north_east dadad //Thoth's Gambit
;

: break //( - )
	.pattern south_west aqdee //Charon's Gambit
;


// ================ Spell Circle Patterns ================ \\


: get-impetus-position //( - vector)
	.pattern south_west eaqwqae //Waystone Reflection
;

: get-impetus-lookvector //( - vector)
	.pattern south_west eaqwqaewede //Lodestone Reflection
;

: get-circle-lower-north-west-position //( - vector)
	.pattern south_west eaqwqaewdd //Lesser Fold Reflection
;

: get-circle-upper-south-east-position //( - vector)
	.pattern west aqwqawaaqa //Greater Fold Reflection
;


// ================ Akashic Patterns ================ \\


: read-akashic-library //(vector pattern - any)
	.pattern west qqqwqqqqqaq //Akasha's Distillation
;

: write-akashic-library //(vector pattern any - )
	.pattern east eeeweeeeede //Akasha's Gambit
;